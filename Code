# -*- coding: utf-8 -*-
"""
Created on Tue Oct  5 09:28:29 2021

@author: Sean W. Hyland
"""
import numpy as np
import pandas as pd
import os


os.chdir("Enter directory where data is stored")
a = pd.read_excel(open('HR data','rb'),sheet_name="Sheet1")


b = pd.read_excel(open('HR data second file','rb'),sheet_name="Sheet1")
# Selecting specific columns of interest
b = b.iloc[:,[0,27,29,40,20,25,34,35,41,45,48,31,32,49]]
employee_data = pd.merge(a, b, how="left", on=["Employee ID", "Employee ID"])
employee_data = employee_data.drop_duplicates(subset=['Employee ID'])
# Organizing columns in desired organization
employee_data = employee_data.iloc[:,[0,1,2,3,4,5,6,12,13,14,15,7,24,16,8,9,17,18,19,20,21,22,23,10,25,26,27,11,28,29,30,31,32,33,34,35,36]]
employee_data = employee_data.rename(columns={'Employee Email':'E-Mail Address'})

employees = employee_data.copy()
Legal_Name = employees['Legal Name']
Legal_Name = Legal_Name.dropna()
Legal_Name = [n.split(" ") for n in Legal_Name]
Legal_Name = pd.DataFrame(Legal_Name)
Legal_Name[0] = Legal_Name[0]+" "+Legal_Name[1]
employees['Legal Name'] = Legal_Name[0]
# Now we will merge with IS information
user_id = pd.read_csv('IS_Data.csv', encoding = 'unicode_escape')
Legal_Name = user_id.assigned_to
Legal_Name = Legal_Name.fillna(' ')
Legal_Name = [", ".join(n.split(" ")[::-1]) for n in Legal_Name]
user_id['Legal Name'] = Legal_Name
user_id = user_id.rename(columns={'userid':'User ID'})
user_id = user_id[user_id['User ID'].notna()]
result = user_id.copy()
result = result.merge(employee_data, how='left', on='User ID')
result = result.rename(columns={'User ID':'userid'})
result['E-Mail Address'] = result['E-Mail Address'].astype(str).str.lower()
del(a)
del(b)
del(user_id)
del(Legal_Name)

'''At this point HR and IS data are merged into a dataset with unique codes
'''

#This is a laptop
Aruba = pd.read_csv('Occupancy.csv')
aruba = Aruba.copy()
aruba['userid'] = aruba['ID']
aruba['Laptop'] = ''
aruba['Laptop'] = aruba['ID'].str[:5]
aruba.loc[aruba.Laptop == 'CORPO', 'userid'] = aruba['ID'].str[10:]
aruba = aruba[aruba.Laptop == 'CORPO']
aruba['ID'] = aruba['userid'].str.upper()
aruba['Laptop'] = aruba['ID']
aruba['userid'] = aruba['ID']
a = aruba
a = a.drop(columns=['ID'])
final1 = a.merge(result, how='left', on='userid')
final1 = final1.iloc[:,[0,1,2,13,14,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]
del(a)

#This is a laptop
aruba = Aruba.copy()
aruba['ci'] = ""
aruba['Laptop2'] = ''
aruba['Laptop2'] = aruba['ID'].str[:5]
aruba.loc[aruba.Laptop2 == 'host/', 'ci'] = aruba['ID'].str[5:19]
aruba = aruba[aruba.Laptop2 == 'host/']
aruba['Laptop2'] = aruba['ci']
aruba = aruba.drop(columns=['ID'])
aruba['ci'].replace('', np.nan, inplace=True)
aruba = aruba[aruba['ci'].notna()]
b = aruba
final2 = b.merge(result, on='ci', how='left')
final2 = final2.replace(r'^\s*$', np.nan, regex=True)
final2 = final2.iloc[:,[0,1,8,14,4,5,6,7,9,11,2,12,13,16,15,10,17,18,19,20,21,22,23,24,25,3,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]
final2 = final2[final2['ci'].notna()]
del(b)

#This is a mobile device
aruba = Aruba.copy()
aruba['E-Mail'] = ''
aruba['Cell'] = ''
aruba['Cell'] = aruba['ID'].str[-10:]
aruba.loc[aruba.Cell == '@business.com', 'E-Mail'] = aruba['ID']
aruba = aruba[aruba.Cell == '@business.com']
aruba['Cell'] = aruba['ID']
aruba = aruba.drop(columns=['ID'])
aruba['Cell'].replace('', np.nan, inplace=True)
aruba = aruba[aruba['Cell'].notna()]
c = aruba
c = c.replace(r'^\s*$', np.nan, regex=True)
c = c[c['E-Mail'].notna()]
c = c.rename(columns={'E-Mail':'E-Mail Address'})
c.reset_index(drop=True, inplace=True)
final3 = c.merge(result, on='E-Mail Address', how='left')
final3 = final3.iloc[:,[0,1,8,15,4,5,6,7,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,2,25,3,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48]]
del(c)

#These are unmanaged devices
aruba = Aruba.copy()
aruba['Unidentified'] = ""
aruba['Unmanaged'] = ''
aruba['Unmanaged'] = aruba['ID'].str[:5]
aruba.loc[aruba.Unmanaged == 'host/', 'Unidentified'] = "N/A"
aruba['Unmanaged'] = aruba['ID'].str[-10:]
aruba.loc[aruba.Unmanaged == '@business.com', 'Unidentified'] = "N/A"
aruba['Unmanaged'] = aruba['ID'].str[:5]
aruba.loc[aruba.Unmanaged == 'CORPO', 'Unidentified'] = "N/A"
aruba['Unmanaged'] = aruba['ID'].str.len()
aruba.loc[aruba.Unmanaged == '6', 'Unidentified'] = "N/A"
aruba = aruba.drop(aruba[aruba.Unidentified == "N/A"].index)
aruba['ID'] = aruba['ID'].str.upper()
aruba['Unidentified'] = aruba['ID']
aruba['Length'] = aruba.Unidentified.str.len()
aruba = aruba[aruba.Length > 6]
aruba = aruba.drop(columns=['Unmanaged', 'Length'])
aruba['Unidentified'].replace('', np.nan, inplace=True)
aruba = aruba[aruba['Unidentified'].notna()]
aruba['userid']='Unmanaged'
final4 = aruba


#This is a Meraki 
e = pd.read_csv('Meraki Clean and Convert.csv')
e = e.merge(employee_data, on='ID', how='left')
e['Laptop'] = e['user']
e['asset_tag'] = ""
e['model_category'] = ''
e['model.display_name'] = ''
e['Unidentified'] = ''
e['assigned_to'] = e['Legal Name']
e['location'] = e['Location Name']
e['install_status'] = 'In use'
e['ci'] = ''
e['company'] = 'Your Company Name'
e = e.iloc[:,[0,3,4,5,6,7,8,9,14,17,18,26,31,36,38,40]]
e.reset_index(drop=True, inplace=True)
final5 = e
del(e)
del(Aruba)
del(aruba)
del(employee_data)

df_merged = pd.concat([final1, final2], ignore_index=True)
del(final1)
del(final2)
#df_merged.reset_index(drop=True, inplace=True)
df_merged = pd.concat([df_merged, final3], ignore_index=True)
del(final3)
#df_merged.reset_index(drop=True, inplace=True)
df_merged = pd.concat([df_merged, final4], ignore_index=True)
del(final4)
#df_merged.reset_index(drop=True, inplace=True)
df_merged = pd.concat([df_merged, final5], ignore_index=True)
del(final5)
#df_merged = df_merged.drop_duplicates(subset=['userid', 'Date_Time', 'Location'], keep = 'last')

df_merged = df_merged.drop_duplicates()
df_merged = df_merged.iloc[:,[0,1,2,28,4,5,6,7,8,9,10,11,12,13,14,3,32,26,23,24,20,36,22,25,35,37,33,27,38,39,40,46,47,41,42,29,43,44,48,34,49,50,51,52,53]]
df_merged_final = df_merged
df_merged_final.sort_values(by='Date_Time', ascending=True)

os.chdir("//nhqisiloncifs/tableau_data_sources/bws/Occupancy/Tableau")
df_merged_final_1 = df_merged_final.iloc[:500000, :]
df_merged_final_1.to_csv('result.csv',index = False)
del(df_merged_final_1)
df_merged_final_2 = df_merged_final.iloc[500001:, :]
